apiVersion: v1
kind: Service
metadata:
  name: mongo
spec:
  ports:
  - protocol: TCP
    port: 27017
---
apiVersion: v1
kind: Endpoints
metadata:
  name: mongo
subsets:
  - addresses:
      - ip: "10.0.1.92" # Make sure this is correct
    ports:
      - port: 27017
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend-container
        image: "889818960214.dkr.ecr.us-west-2.amazonaws.com/my-app-repo:3tier-nodejs-backend-latest"
        ports:
        - containerPort: 3001
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
spec:
  type: ClusterIP
  selector:
    app: backend
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3001
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend-container
        image: "889818960214.dkr.ecr.us-west-2.amazonaws.com/my-app-repo:3tier-nodejs-frontend-latest"
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
spec:
  type: ClusterIP
  selector:
    app: frontend
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: backend-access-policy
spec:
  podSelector:
    matchLabels:
      app: backend
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: frontend
    ports:
    - protocol: TCP
      port: 3001
---
# ===================================================================
# Ingress with Path-Based Routing (THE UPDATED PART)
# ===================================================================
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-app-ingress
  annotations:
    # Use 'alb' as the Ingress class. This tells the AWS Load Balancer Controller to handle this.
    spec.ingressClassName: alb
    # Scheme: internet-facing for a public load balancer.
    alb.ingress.kubernetes.io/scheme: internet-facing
    # TargetType: ip for better performance.
    alb.ingress.kubernetes.io/target-type: ip
spec:
  rules:
    - http:
        paths:
          # Rule 1: Route API calls to the backend.
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: backend-service
                port:
                  number: 80
          # Rule 2: Route all other traffic to the frontend.
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend-service
                port:
                  number: 80
